@model List<UserModel>

@{
    ViewBag.Title = "User List";
    OperationNamesViewModel operations = new OperationNamesViewModel();
}

<h1 style="color: dodgerblue;">@ViewBag.Title</h1>
<div style="padding-top: 15px; padding-bottom: 15px;">
    <a asp-action="Create" class="btn btn-primary"><i style="color: yellow;" class="fas fa-plus-square"></i> Create New</a>
</div>
@if (ViewBag.Info != null)
{
    <p style="color: dodgerblue;">
        @ViewBag.Info
    </p>
}
@if (ViewBag.Danger != null)
{
    <p style="color: red;">
        @ViewBag.Danger
    </p>
}
<div>
    @*<table id="users" class="display" style="width: 100%;">*@
    <table id="userstable" class="ui celled table" style="width: 100%;">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().EMail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Password)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Active)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Role.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().NumbersofWordLearned)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EMail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Password)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Active)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Role.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumbersofWordLearned)
                    </td>
                    <td>
                        <a title="@operations.Edit" class="btn btn-outline-primary circlebutton" asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-edit"></i></a>
                        &nbsp;&nbsp;
                        <a title="@operations.Details" class="btn btn-secondary circlebutton" asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-info-circle"></i></a>
                        &nbsp;&nbsp;
                        <a title="@operations.Delete" href="#" class="btn btn-danger circlebutton" onclick="deleteUser(@item.Id);" id="deletedirectly"><i class="fas fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts{
    <script src="~/js/datatables.js"></script>
    <link href="~/lib/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/AlertifyJS/alertify.min.js"></script>
    <link href="~/lib/AlertifyJS/css/alertify.min.css" rel="stylesheet" />
    <script>
        $(function () {
            BindDataTable("userstable");
        });
        function deleteUser(id) {
            alertify.confirm("Warning",
                "Are you sure do you vont to delete this product?",
                function () {
                    window.location.href = "/User/DeleteDirectly/" + id;
                },
                function () {
                    alertify.error("Delete canceled.");
                }
            );
        };
    </script>
}